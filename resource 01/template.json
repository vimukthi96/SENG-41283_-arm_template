{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "IotHubs_iots_connectionString": {
            "type": "SecureString"
        },
        "IotHubs_iots_containerName": {
            "type": "SecureString"
        },
        "IotHubs_iots_name": {
            "defaultValue": "iots",
            "type": "String"
        },
        "sites_webapp111101_name": {
            "defaultValue": "webapp111101",
            "type": "String"
        },
        "serverfarms_ASP_getras_9f57_name": {
            "defaultValue": "ASP-getras-9f57",
            "type": "String"
        },
        "serverfarms_webapp111101plan_name": {
            "defaultValue": "webapp111101plan",
            "type": "String"
        },
        "workspaces_iots_name": {
            "defaultValue": "iots",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___webapp111101_name": {
            "defaultValue": "failure anomalies - webapp111101",
            "type": "String"
        },
        "components_webapp111101_externalid": {
            "defaultValue": "/subscriptions/95895eb1-435b-4b0d-aec0-4983915c03c6/resourceGroups/getras/providers/microsoft.insights/components/webapp111101",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2020-03-01",
            "name": "[parameters('IotHubs_iots_name')]",
            "location": "eastus",
            "tags": {
                "department": "accounting"
            },
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 2
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "[parameters('IotHubs_iots_connectionString')]",
                        "containerName": "[parameters('IotHubs_iots_containerName')]"
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2020-03-01-preview",
            "name": "[parameters('workspaces_iots_name')]",
            "location": "eastus",
            "properties": {
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_getras_9f57_name')]",
            "location": "East US",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_webapp111101plan_name')]",
            "location": "East US",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___webapp111101_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[parameters('components_webapp111101_externalid')]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Computers with their most recent data",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Which Management Group is generating the most data points?",
                "category": "General Exploration",
                "query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Distribution of data Types",
                "category": "General Exploration",
                "query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Stale Computers (data older than 24 hours)",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Events",
                "category": "Log Management",
                "query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Syslogs",
                "category": "Log Management",
                "query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by Facility",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by ProcessName",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records with Errors",
                "category": "Log Management",
                "query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by HTTP Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP Request Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP User Agent",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Host requested by client",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "category": "Log Management",
                "query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Shows breakdown of response codes",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Log",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event ID",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Source",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events containing the word \"started\" grouped by EventID",
                "category": "Log Management",
                "query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Find the maximum time taken for each page",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "category": "Log Management",
                "query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All IIS Log Entries",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "How many connections to Operations Manager's SDK service by day",
                "category": "Log Management",
                "query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "When did my servers initiate restart?",
                "category": "Log Management",
                "query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Shows which pages people are getting a 404 for",
                "category": "Log Management",
                "query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Shows servers that are throwing internal server error",
                "category": "Log Management",
                "query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each Azure Role Instance",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each IIS Computer",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes sent by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Events with level \"Warning\"",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Windows Firewall Policy settings have changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/LogManagement(', parameters('workspaces_iots_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_AccountsWhoTerminatedMicrosoftAntimalware')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Accounts who terminated Microsoft antimalware (\"MsMpEng.exe\") on any computer",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4689 and \"MsMpEng.exe\" | summarize TerminationCount = count() by Account",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_AllSecurityActivities')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Security Activities",
                "category": "Security",
                "query": "search in (SecurityEvent) * | project TimeGenerated, Account, Activity, Computer | sort by TimeGenerated desc",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_DevicesWhereHashWasExecuted')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers where \"hash.exe\" was executed (replace with different process name) more than 5 times",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4688 and \"hash.exe\" | summarize ExecutionCount = count() by Computer | limit 500000 | where ExecutionCount > 5",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_DevicesWhereTheMicrosoftAntimalwareProcessTerminated')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers where the Microsoft antimalware process (\"MsMpEng.exe\") was terminated",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4689 and \"MsMpEng.exe\" | summarize TerminationCount = count() by Computer | limit 500000",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_DevicesWithSecurityLogCleared')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers whose security log was cleared",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 1102 | summarize LogClearedCount = count() by Computer | limit 500000",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_LogonActivitybyAccount')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Account",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Account",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_LogonActivitybyDevice')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Computer",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Computer | limit 500000",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_LogonActivityByDeviceWithMoreThan10Logons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Computer Where More than 10 logons have happened",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Computer | limit 500000 | where LogonCount > 10",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_LogonActivityforUsersWith5timesActivity')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Logon Activity by Account for accounts who only logged on less than 5 times",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 | summarize LogonCount = count() by Account | where LogonCount < 5",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_ProcessNamesExecuted')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "All Process names that were executed",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4688 | summarize ExecutionCount = count() by NewProcessName",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_RemotedLoggedAccountsOnDevices')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Accounts who remotely logged on the computer \"Computer01.contoso.com\" (replace with your own computer name)",
                "category": "Security",
                "query": "search in (SecurityEvent) EventID == 4624 and (LogonTypeName == \"3 - Network\" or LogonTypeName == \"10 - RemoteInteractive\") and Computer == \"Computer01.contoso.com\" | summarize RemoteLogonCount = count() by Account",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityActivitiesonTheDeviceDevice01')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Security Activities on the computer \"Computer01.contoso.com\" (replace with your own computer name)",
                "category": "Security",
                "query": "search in (SecurityEvent) Computer == \"COMPUTER01.contoso.com\" | project TimeGenerated, Account, Activity, Computer | sort by TimeGenerated desc",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityActivitiesonTheDeviceDevice01ForAdmin')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Security Activities on the computer \"COMPUTER01.contoso.com\" for account \"Administrator\" (replace with your own computer and account names)",
                "category": "Security",
                "query": "search in (SecurityEvent) Computer == \"COMPUTER01.contoso.com\" and TargetUserName == \"Administrator\" | project TimeGenerated, Account, Activity, Computer | sort by TimeGenerated desc",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityCriticalNotableIssues|ComputersMissingSecurityUpdates')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers missing security updates",
                "category": "Security Critical Notable Issues",
                "query": "Update | where UpdateState == 'Needed' and Optional == false and Classification == 'Security Updates' and Approved != false | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityCriticalNotableIssues|ComputersWithDetectedThreats')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with detected threats",
                "category": "Security Critical Notable Issues",
                "query": "ProtectionStatus | summarize (TimeGenerated, ThreatStatusRank) = argmax(TimeGenerated, ThreatStatusRank) by Computer | where ThreatStatusRank > 199 and ThreatStatusRank != 470",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityCriticalNotableIssues|ComputersWithGuestAccountLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computer with guest account logons",
                "category": "Security Critical Notable Issues",
                "query": "SecurityEvent | where EventID == 4624 and TargetUserName == 'Guest' and LogonType in (10, 3) | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityCriticalNotableIssues|DistinctMaliciousIPAddressesAccessed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Distinct malicious IP addresses accessed",
                "category": "Security Critical Notable Issues",
                "query": "union isfuzzy=true (WireData | where Direction == 'Outbound'), (WindowsFirewall | where CommunicationDirection == 'SEND'), (CommonSecurityLog | where CommunicationDirection == 'Outbound') | where isnotempty(MaliciousIP) | summarize by MaliciousIP",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityCriticalNotableIssues|HighPriorityADAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "High priority Active Directory assessment security recommendations",
                "category": "Security Critical Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (ADAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore>=35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityCriticalNotableIssues|HighPrioritySQLAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "High priority SQL assessment security recommendations",
                "category": "Security Critical Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (SQLAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore>=35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|AccountsFailedToLogon')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Accounts failed to log on",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID == 4625 | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|Auditd_AccountsFailedToLogin')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Accounts failed to login (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where RecordType == 'user_login' and res != 'success' | summarize count() by acct",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|Auditd_ExecutedCommands')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Executed Commands (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where RecordType == 'syscall' and syscall == 'execve' | summarize count() by cmd",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|Auditd_LoadingOrUnloadingOfKernelModules')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Loading or Unloading of Kernel modules (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where key == 'kernelmodules' and RecordType != 'CONFIG_CHANGE'",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|Auditd_NumberOfDistinctLocationsOfProcessExecuted')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Distinct paths of Executed Commands (Linux)",
                "category": "Security Info Notable Issues",
                "query": "LinuxAuditLog | where RecordType == 'syscall' and syscall == 'execve' | summarize count() by exe",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ChangeOrResetPasswordsAttempts')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Change or reset passwords attempts",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (4723, 4724) | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithCleanedEventLogs')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with cleaned event logs",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (1102, 517) and EventSourceName == 'Microsoft-Windows-Eventlog' | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedLinuxUserPasswordChange')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed Linux user password change",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where Facility == 'authpriv' and ((SyslogMessage has 'passwd:chauthtok' and SyslogMessage has 'authentication failure') or SyslogMessage has 'password change failed') | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedSshLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed ssh logons",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where (Facility == 'authpriv' and SyslogMessage has 'sshd:auth' and SyslogMessage has 'authentication failure') or (Facility == 'auth' and ((SyslogMessage has 'Failed' and SyslogMessage has 'invalid user' and SyslogMessage has 'ssh2') or SyslogMessage has 'error: PAM: Authentication failure')) | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedSudoLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed sudo logons",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where (Facility == 'authpriv' and SyslogMessage has 'sudo:auth' and (SyslogMessage has 'authentication failure' or SyslogMessage has 'conversation failed')) or ((Facility == 'auth' or Facility == 'authpriv') and SyslogMessage has 'user NOT in sudoers') | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithFailedSuLogons')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with failed su logons",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where (Facility == 'authpriv' and SyslogMessage has 'su:auth' and SyslogMessage has 'authentication failure') or (Facility == 'auth' and SyslogMessage has 'FAILED SU') | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithNewLinuxGroupCreated')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with new Linux group created",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where Facility == 'authpriv' and SyslogMessage has 'new group' | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|ComputersWithUsersAddedToLinuxGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with users added to a Linux group",
                "category": "Security Info Notable Issues",
                "query": "Syslog | where Facility == 'authpriv' and SyslogMessage has 'to group' and (SyslogMessage has 'add' or SyslogMessage has 'added') | summarize by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|DistinctClientsResolvingMaliciousDomains')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Distinct clients resolving malicious domains",
                "category": "Security Info Notable Issues",
                "query": "let schemaColumns = datatable(ClientIP:string)[]; union isfuzzy=true schemaColumns, (DnsEvents | where SubType == 'LookupQuery' and isnotempty(MaliciousIP)) | summarize count() by ClientIP",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|LockedAccounts')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Locked accounts",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID == 4740 | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|RemoteProcedureCallAttempts')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Remote procedure call(RPC) attempts",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID == 5712 | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|SecurityGroupsCreatedOrModified')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Security groups created or modified",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (4727, 4731, 4735, 4737, 4754, 4755) | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityInfoNotableIssues|UserAccountsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "User accounts created or enabled",
                "category": "Security Info Notable Issues",
                "query": "SecurityEvent | where EventID in (4720, 4722) | summarize by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|ComputersMissingCriticalUpdates')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers missing critical updates",
                "category": "Security Warning Notable Issues",
                "query": "Update | where UpdateState == 'Needed' and Optional == false and Classification == 'Critical Updates' and Approved != false | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|ComputersWithInsufficientProtection')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with insufficient  protection",
                "category": "Security Warning Notable Issues",
                "query": "ProtectionStatus | summarize (TimeGenerated, ProtectionStatusRank) = argmax(TimeGenerated, ProtectionStatusRank) by Computer | where ProtectionStatusRank > 199 and ProtectionStatusRank != 550",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|ComputersWithSystemAuditPolicyChanges')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Computers with system audit policy changes",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 4719 | summarize count() by Computer",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|DomainSecurityPolicyChanges')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Domain security policy changes",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 4739 | summarize count() by DomainPolicyChanged",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|LogonsWithClearTextPassword')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Logons with a clear text password",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 4624 and LogonType == 8 | summarize count() by TargetAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|LowPriorityADAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Low priority AD assessment security recommendations",
                "category": "Security Warning Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (ADAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore<35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|LowPrioritySQLAssessmentSecurityRecommendations')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Low priority SQL assessment security recommendations",
                "category": "Security Warning Notable Issues",
                "query": "let schemaColumns = datatable(TimeGenerated:datetime, RecommendationId:string)[]; union isfuzzy=true schemaColumns, (SQLAssessmentRecommendation | where FocusArea == 'Security and Compliance' and RecommendationResult == 'Failed' and RecommendationScore<35) | summarize arg_max(TimeGenerated, *) by RecommendationId",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|MembersAddedToSecurityEnabledGroups')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Members added To security-enabled groups",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID in (4728, 4732, 4756) | summarize count() by SubjectAccount",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat(parameters('workspaces_iots_name'), '/Security(', parameters('workspaces_iots_name'), ')_SecurityWarningNotableIssues|SuspiciousExecutables')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_iots_name'))]"
            ],
            "properties": {
                "displayName": "Suspicious executables",
                "category": "Security Warning Notable Issues",
                "query": "SecurityEvent | where EventID == 8002 and Fqbn == '-' | summarize ExecutionCountHash=count() by FileHash | where ExecutionCountHash <= 5",
                "version": 2
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_webapp111101_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_webapp111101plan_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_webapp111101_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_webapp111101_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_webapp111101plan_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_webapp111101_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp111101_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "nodeVersion": "12.13.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$webapp111101",
                "azureStorageAccounts": {},
                "scmType": "LocalGit",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": true,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_webapp111101_name'), '/', parameters('sites_webapp111101_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webapp111101_name'))]"
            ],
            "properties": {
                "siteName": "webapp111101",
                "hostNameType": "Verified"
            }
        }
    ]
}